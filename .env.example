# Required: Anthropic API Configuration
# The Claude Agent SDK is used exclusively for AI interactions
# Provider: anthropic (default), vertex, or bedrock
CLAUDE_PROVIDER=anthropic
ANTHROPIC_API_KEY=your-anthropic-api-key

# Vertex AI Configuration (when CLAUDE_PROVIDER=vertex)
# Use standard Claude Code environment variables:
# ANTHROPIC_VERTEX_PROJECT_ID=your-gcp-project-id
# CLOUD_ML_REGION=global
# CLAUDE_CODE_USE_VERTEX=1  # (set automatically by this server based on CLAUDE_PROVIDER)
# GCP credentials via Application Default Credentials (gcloud auth application-default login)

# AWS Bedrock Configuration (when CLAUDE_PROVIDER=bedrock)
# Use standard AWS environment variables:
# AWS_REGION=us-east-1
# CLAUDE_CODE_USE_BEDROCK=1  # (set automatically by this server based on CLAUDE_PROVIDER)
# AWS credentials via default credentials chain (~/.aws/credentials or IAM role)

# Model Configuration
CLAUDE_MODEL=claude-sonnet-4-5-20250929
CLAUDE_TEMPERATURE=1.0
CLAUDE_MAX_TOKENS=16384

# Agent Mode: Conversation Management
CLAUDE_ENABLE_CONVERSATIONS=false  # Set to 'true' to enable multi-turn conversations
CLAUDE_SESSION_TIMEOUT=3600        # Session timeout in seconds (default: 1 hour)
CLAUDE_MAX_HISTORY=10              # Maximum messages to keep in conversation history
CLAUDE_MAX_TURNS=10                # Maximum turns for agentic loop (default: 10, similar to gemini-mcp-server)

# System Prompt Customization
# Override the default system prompt to customize AI assistant behavior
# Example: CLAUDE_SYSTEM_PROMPT="You are a helpful assistant with search capabilities."
# CLAUDE_SYSTEM_PROMPT=

# Logging Configuration
# Default: Console logging (stderr)
# Set CLAUDE_LOG_TO_STDERR=false to use file logging instead
CLAUDE_DISABLE_LOGGING=false       # Set to 'true' to disable all logging
CLAUDE_LOG_TO_STDERR=true          # Default: true (console logging)
# CLAUDE_LOG_DIR=/path/to/logs     # Custom directory for log files (only used when LOG_TO_STDERR=false)

# Agent Mode: MCP-to-MCP Connectivity
# CLAUDE_MCP_SERVERS='[{"name":"server1","transport":"stdio","command":"node","args":["path/to/server.js"]}]'
